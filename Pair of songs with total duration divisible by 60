class Solution:
    from itertools import combinations
    def numPairsDivisibleBy60(self, time: List[int]) -> int:
        # this answer is correct but time limit exceeded
        # answer = 0
        # for i in range(len(time)-1):
        #     # print("i", time[i])
        #     for y in range(i+1, len(time)):
        #         sum = time[i] + time[y] 
        #         if  sum % 60==0:
        #             answer +=1
        #             # print("answer",answer)
        # return answer

       #excellent solution using the concept of updating the value of 1 with the remainder of the value divided by 60, when it updates to more than 1 that is counted towards a possibility. awesome answer.

        c = [0] * 60
        res =0
        for t in time:
            res += c[-t % 60]
            c[t%60] +=1
        return res
