#this is a permutation problem related to fibanocci series just keep incrementing the addition as n progresses

class Solution:
    def climbStairs(self, n: int) -> int:
        if n==1:
            return 1
        if n==2:
            return 2
        first = 1
        second = 2
        for i in range(n-3,-1,-1):
            temp = first+second
            first = second
            second = temp
        return temp


class Solution:
    def climbStairs(self, n: int) -> int:
        return self.climb_stairs(0,n)
    def climb_stairs (self, i:int, n: int) -> int:
        if i > n:
            return 0
        if i==n:
            return 1
        return self.climb_stairs(i+1,n) + self.climb_stairs(i+2,n)
    
